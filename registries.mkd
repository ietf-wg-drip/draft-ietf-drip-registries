---
coding: utf-8

title: DRIP Registries
abbrev: registries
docname: draft-ietf-drip-registries-01
category: std

ipr: trust200902
area: Internet
wg: drip Working Group
kw: Internet-Draft
cat: std

stand_alone: yes
pi: [toc, sortrefs, symrefs, comments]

author:

-   ins: A. Wiethuechter
    name: Adam Wiethuechter
    org: AX Enterprize, LLC
    street: 4947 Commercial Drive
    city: Yorkville
    region: NY
    code: 13495
    country: USA
    email: adam.wiethuechter@axenterprize.com
-   ins: S. Card
    name: Stuart Card
    org: AX Enterprize, LLC
    street: 4947 Commercial Drive
    city: Yorkville
    region: NY
    code: 13495
    country: USA
    email: stu.card@axenterprize.com
-   ins: R. Moskowitz
    name: Robert Moskowitz
    org: HTT Consulting
    street: ""
    city: Oak Park
    region: MI
    code: 48237
    country: USA
    email: rgm@labs.htt-consult.com
-   ins: J. Reid
    name: Jim Reid
    org: RTFM llp
    street: St Andrews House
    city: 382 Hillington Road
    region: Glasgow
    code: G51 4BL
    country: Scotland
    email: jim@rfc1035.com


normative:
    F3411-19:
        title: "Standard Specification for Remote ID and Tracking"
        author:
        org: ASTM International
        date: 2020-02

informative:
    RFC7519:
    RFC8392:
    drip-requirements: I-D.ietf-drip-reqs
    drip-arch: I-D.ietf-drip-arch
    drip-rid: I-D.ietf-drip-uas-rid
    hhit-registries: I-D.moskowitz-hip-hhit-registries
    drip-auth: I-D.ietf.drip-auth
    NPRM:
        title: "Notice of Proposed Rule Making on Remote Identification of Unmanned Aircraft Systems"
        author:
        org: "United States Federal Aviation Administration (FAA)"
        date: 2019-12

--- abstract

This document creates the DRIP DET registration and discovery ecosystem.  This includes all components in the ecosystem (e.g., RAA, HDA, UA, GCS, USS).  The registration process will use the Extensible Provisioning Protocol (EPP) and other protocols.  The discovery process will leverage DNS and DNSSEC and related technology.  The DETs can be registered with as their "raw public keys" or in X.509 certificates.

--- middle

# Introduction

Registries are fundamental to RID. Only very limited information can be Broadcast, but extended information is sometimes needed. The most essential element of information sent is the UAS ID itself, the unique key for lookup of extended information in registries.

While it is expected that registry functions will be integrated with USS, who will provide them is not yet determined in most, and is expected to vary between, jurisdictions. However this evolves, the essential registry functions, starting with management of identifiers, are expected to remain the same, so are specified herein.

While most data to be sent via Broadcast or Network RID is public, much of the extended information in registries will be private. Thus AAA for registries is essential, not just to ensure that access is granted only to strongly authenticated, duly authorized parties, but also to support subsequent attribution of any leaks, audit of who accessed information when and for what purpose, etc. As specific AAA requirements will vary by jurisdictional regulation, provider philosophy, customer demand, etc., they are left to specification in policies, which should be human readable to facilitate analysis and discussion, and machine readable to enable automated enforcement, using a language amenable to both, e.g., XACML.

The intent of the negative and positive access control requirements on registries is to ensure that no member of the public would be hindered from accessing public information, while only duly authorized parties would be enabled to access private information. Mitigation of Denial of Service attacks and refusal to allow database mass scraping would be based on those behaviors, not on identity or role of the party submitting the query per se, but querant identity information might be gathered (by security systems protecting DRIP implementations) on such misbehavior.

Registration under DRIP is vital as the worry of collisions in the hash portion of the DET. Forgery of the DET is still possible, but including it as a part of a public registration mitigates a lot of the risk. This document creates the DRIP DET registration and discovery ecosystem.  This includes all components in the ecosystem (e.g., RAA, HDA, UA, GCS, USS).  The registration process will use the Extensible Provisioning Protocol (EPP) and other protocols.  The discovery process will leverage DNS and DNSSEC and related technology.  The DETs can be registered with as their "raw public keys" or in X.509 certificates.

## Abstract Process & Reasoning

In DRIP each entity (registries, operators and aircraft) is expected to generate a full DRIP Entity ID {{drip-rid}} on the local device their key is expected to be used. These are registered with a Public Information Registry within the hierarchy along with whatever data is required by the cognizant CAA and the registry. Any PII is stored in a Private Information Registry protected through industry practice AAA or better. In response, the entity will obtain an attestation or certificate from the registry proving such registration.

Manufacturers that wish to participate in DRIP should not only support DRIP as a Session ID type for their aircraft but also generate a DET then encode it as a Serial Number. This would allow aircraft under CAA mandates to fly only ID Type 1 (Serial Number) could still use DRIP and all its benefits. Even if DRIP is not supported for Serial Numbers by a Manufacturer it is hoped that they would still run a registry to store their Serial Numbers and allow look ups for generic model information. This look up could be especially helpful in UTM for Situational Awareness when an aircraft flying with a Serial Number is detected and allow for an aircraft profile to be displayed.

Operators are registered with a number of registries or their regional RAA. This acts as a verification check when a user performs other registration operations; such as provisioning an aircraft with a new Session ID. It is an open question if an Operator registers to their CAA (the RAA) or multiple USS's (HDA's). PII of the Operator would vary based on the CAA they are under and the registry.

Finally aircraft that support using a DET would provision per flight to a USS, proposing a DET to the registry to generate a binding between the aircraft, operator and registry. Aircraft then follow {{drip-auth}} to meet various {{drip-requirements}}.

# Terminology {#terminology}

## Required Terminology

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 {{!RFC2119}} {{!RFC8174}} when, and only when, they appear in all capitals, as shown here.

## Definitions

See {{?drip-requirements}} for common DRIP terms.

HDA:

: Hierarchial HIT Domain Authority. The 16 bit field identifying the HIT Domain Authority under a RAA.

HID:

: Hierarchy ID. The 32 bit field providing the HIT Hierarchy ID.

RAA:

: Registered Assigning Authority. The 16 bit field identifying the Hierarchical HIT Assigning Authority.

<!-- # Claims, Assertions, Attestations & Certificates

This section introduces the terms "Claims", "Assertions", "Attestations", and "Certificates" as used in DRIP. In DRIP certificate has a different context compared with security certificates and Public Key Infrastructure used in X.509.

Claims:

> A claim in DRIP is a predicate (e.g., "X is Y", "X has property Y", and most importantly "X owns Y" or "X is owned by Y").  

Assertions:

> An assertion in DRIP is a set of claims.  This definition is borrowed from JWT {{RFC7519}} and CWT {{RFC8392}}.  

Attestations:  

> An attestation in DRIP is a signed assertion. The signer may be the claimant or a related party with stake in the assertion(s). Under DRIP this is normally used when an entity asserts a relationship with another entity, along with other information, and the asserting entity signs the assertion, thereby making it an attestation.

Certificates:

> A certificate in DRIP is an attestation, strictly over identity information, signed by a third party. This third party should be one with no stake in the attestation(s) its signing over. -->

# DRIP Attestations & Certificates

See {{drip-arch}} for definitions of claim, assertion, attestation and certificate as used in this document.

## Attestation Structure

All Attestations and Certificates under DRIP share the following format:

{:fig: artwork-align="center"}
~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                 Attestor Identity Information                 .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                       Attestation Data                        .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|               Expiration Timestamp by Attestor                |
+---------------+---------------+---------------+---------------+
|                 Signing Timestamp by Attestor                 |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                     Signature by Attestor                     |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Attestor Identity Information: (0, 16-bytes or 120-bytes)
    Field containing Attestor Identity Information in various forms.

Attestation Data:
    A field of variable length containing the attestation data.

Expiration Timestamp by Attestor (4 bytes):
    Timestamp denoting recommended time to trust data to.

Signing Timestamp by Attestor (4 bytes):
    Current time at signing.

Attestor Signature (64 bytes):
    Signature over preceding fields using the keypair of 
    the Attestor.
~~~~
{:fig #att-struct title="Attestation Structure"}

### Attestor Identity Information

This can be any one of the following:

1. None
2. Attestor DET: 16-bytes
2. Attestor SelfAttestation: 120-bytes

A specific definition of an Attestation or Certificate defines which of these are used.

Two Attestation's remove this field: MutualAttestation {{mutual-attestation}} and LinkAttestation {{link-attestation}} as their definition clearly states that the signer is the second party with their DET or SelfAttestation already embedded in the Attestation Data.

### Attestation Data

The data being attested to. It can be one of the following forms:

1. Claims
2. Assertions
3. Attestations

This field is variable length with no limit and specific definitions of an Attestation or Certificate indicate the fields, size and ordering of any subfields.

### Expiration Timestamp

A UTC timestamp set some time into the future to indicate a point the Attestation Structure should not be trusted.

### Signing Timestamp

A UTC timestamp set to the time when the Attestation Structure was signed.

### Signature

An EdDSA25519 signature using the signing parties private key over the preceding fields in the Attestation Structure.

## Attestations

### Self-Attestation (SA-xx) {#self-attestation}

The only attestation to use a claim (the Host Identity) in the `Attestation Data` with the DET acting as the `Attestor Identity Information`.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                          Hierarchical                         |
|                       Host Identity Tag                       |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                          Host Identity                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+
|                         Trust Timestamp                       |
+---------------+---------------+---------------+---------------+
|                        Signing Timestamp                      |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                            Signature                          |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 120-bytes
~~~~
{:fig #axx-fig title="DRIP Self-Attestation"}

### Attestation (A-xy) {#attestation}

(Editors Note: blurb here?)

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                             SA-xx                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                             SA-yy                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                      Trust Timestamp by X                     |
+---------------+---------------+---------------+---------------+
|                     Signing Timestamp by X                    |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                         Signature by X                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 312-bytes
~~~~
{:fig #axy-fig title="DRIP Attestation"}

### Concise Attestation (CA-xy) {#concise-attestation}

In constrained environments and when there is the guarantee of being able to lookup the DETs to obtain HIs this attestation can be used.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                          Hierarchical                         |
|                    Host Identity Tag of X                     |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                          Hierarchical                         |
|                    Host Identity Tag of Y                     |
|                                                               |
+---------------+---------------+---------------+---------------+
|                      Trust Timestamp by X                     |
+---------------+---------------+---------------+---------------+
|                     Signing Timestamp by X                    |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                         Signature by X                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 104-bytes
~~~~
{:fig #c-axy-fig title="DRIP Concise Attestation"}

### Mutual Attestation (MA-xy) {#mutual-attestation}

An attestation that perform a sign over an existing Attestation where the signer is the second party of the embedded attestation.

This Attestation is one of two that does not fill in the `Attestor Identity Information` ({{attestor-identity-information}}) as the data is already present in the `Attestation Data` ({{attestation-data}}) in the form of Y's SelfAttestation.

The unique size of this attestation (384-bytes) allows for easy detection and subsequent decoding without issue.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                              A-xy                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                      Trust Timestamp by Y                     |
+---------------+---------------+---------------+---------------+
|                     Signing Timestamp by Y                    |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                         Signature by Y                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 384-bytes
~~~~
{:fig #m-axy-fig title="DRIP Mutual Attestation"}

### Link Attestation (LA-xy) {#link-attestation}

An attestations that perform a sign over an existing ConciseAttestation where the signer is the second party of the embedded attestation.

This Attestation is one of two that does not fill in the `Attestor Identity Information` ({{attestor-identity-information}}) as the data is already present in the `Attestation Data` ({{attestation-data}}) in the form of Y's DET.

The unique size of this attestation (176-bytes) allows for easy detection and subsequent decoding without issue.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                             CA-xy                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                      Trust Timestamp by Y                     |
+---------------+---------------+---------------+---------------+
|                     Signing Timestamp by Y                    |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                         Signature by Y                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 176-bytes
~~~~
{:fig #l-axy-fig title="DRIP Link Attestation"}

### Broadcast Attestation (BA-xy) {#broadcast-attestation}

Required by DRIP Authentication Formats for Broadcast RID (Editor Note: add link to draft here) to satisfy {{?drip-requirements}} GEN-1 and GEN-3.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                          Hierarchical                         |
|                    Host Identity Tag of X                     |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                          Hierarchical                         |
|                    Host Identity Tag of Y                     |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                       Host Identity of Y                      |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+
|                      Trust Timestamp by X                     |
+---------------+---------------+---------------+---------------+
|                     Signing Timestamp by X                    |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                         Signature by X                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 136-bytes
~~~~
{:fig #b-axy-fig title="DRIP Broadcast Attestation"}

## Certificates

In DRIP certificates are signed by a third party that has no stake in the claims/assertions/attestations being attested to.

It is analogous to a third party in legal system that signs a document as a "witness" and bears no responsibility in the document.

### Attestation Certificate (AC-zxy) {#attestation-certificate}

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                             SA-zz                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                              A-xy                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                      Trust Timestamp by Z                     |
+---------------+---------------+---------------+---------------+
|                     Signing Timestamp by Z                    |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                         Signature by Z                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 504-bytes
~~~~
{:fig #a-cxy-fig title="DRIP Attestation Certificate"}

### Concise Certificate (CC-zxy) {#concise-certificate}

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                          Hierarchical                         |
|                    Host Identity Tag of Z                     |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                             CA-xy                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                      Trust Timestamp by Z                     |
+---------------+---------------+---------------+---------------+
|                     Signing Timestamp by Z                    |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                         Signature by Z                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 192-bytes
~~~~
{:fig #c-cxy-fig title="DRIP Concise Certificate"}

### Link Certificate (LC-zxy) {#link-certificate}

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                          Hierarchical                         |
|                    Host Identity Tag of Z                     |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                             LA-xy                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                      Trust Timestamp by Z                     |
+---------------+---------------+---------------+---------------+
|                     Signing Timestamp by Z                    |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                         Signature by Z                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 300-bytes
~~~~
{:fig #l-cxy-fig title="DRIP Link Certificate"}

### Mutual Certificate (MC-zxy) {#mutual-certificate}

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                             SA-zz                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                             MA-xy                             .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                      Trust Timestamp by Z                     |
+---------------+---------------+---------------+---------------+
|                     Signing Timestamp by Z                    |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                         Signature by Z                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Length = 576-bytes
~~~~
{:fig #m-cxy-fig title="DRIP Mutual Certificate"}

# X.509 Certificates

Editor Note: to be provided by Bob M.

# Registries

## Classes

Under DRIP there 3 classes of registries, with specific variants in each.

~~~~
                +----------+
                |   Root   | 
                +-o------o-+
                  |      |
******************************************
                  |      |
            +-----o-+  +-o-----+
RAAs        |  IRM  |  |  RAA  |
            +---o---+  +---o---+
                |          |
******************************************
                |          |
            +---o---+  +---o---+
HDAs        |  MRA  |  | RIDR  |
            +-------+  +-------+
~~~~
{:fig #reg-class-fig title="Registry Hierarchy"}

### Root {#root}

This is a special registry holding the RAA value of 0 and HDA value of 0. It delegates out RAA values only to registries that wish to act as an RAA.

(Editors Note: we contemplate this is ICAO running this server or federation of them)

### Registered Assigning Authorities {#raa}

RAA's are the upper hierarchy in DRIP. Most are contemplated to be Civil Aviation Authorities (CAAs) then delegate HDAs to manage their NAS. This is does not preclude other entities to operate an RAA if the Root server allows it.

All RAA's use an HDA value of 0 and have their RAA value delegated to them by the Root.

#### ICAO Registry of Manufacturer's (IRM) {#irm}

A special RAA that hands out HDA values to participating Manufacturer's that hold an ICAO Manufacturer Code used in ANSI CTA2063-A Serial Numbers.

It is holds the RAA value of 1 and HDA value of 0.

(Editors Note: we contemplate this is ICAO running this server or federation of them)

### Hierarchial HIT Domain Authorities {#hda}

#### Manufacturer's Registry of Aircraft (MRA) {#mra}

A registry (HDA) run by a manufacturer of UAS systems that participate in Remote ID. Stores UAS Serial Numbers under a specific ICAO Manufacturer Code (assigned to the manufacturer by ICAO).

A DET can be encoded into a Serial Number (see {{drip-rid}}) and this registry would hold a mapping from the Serial Number to the DET and its artifacts.

Hold RAA value of 1 and HDA values of 1+.

#### Remote ID Registries (RIDR) {#ridr}

Registry that holds the binding between a UAS Session ID (for DRIP the DET) and the UA Serial Number. The Serial Number MUST have its access protected to allow only authorized parties to obtain. The Serial Number SHOULD be encrypted in a way only the authorized party can decrypt.

As part of the UTM system they also hold a binding between a UAS ID (Serial Number or Session ID) and an Operational Intent.

(Editors Note: these are contemplated to be part of a USS as a function or a standalone SDSP in the UTM system)

Hold RAA values of 2+ and HDA values of 1+.

## Federation

(Editors Note: Due to nature of DET we could have multiple registries with same RAA/HDA pairings running and being federated together. How do we handle this?)

# DRIP Fully Qualified Domain Names

Under DRIP there are a number of FQDN forms used to allow lookups to take place.

## Serial Number {#sn-fqdn}

~~~~
Serial Number: 8653FZ2T7B8RA85D19LX
ICAO Mfr Code: 8653
Length Code: F
ID: FZ2T7B8RA85D19LX
FQDN: Z2T7B8RA85D19LX.F.8653.mfr.uas.icao.int
~~~~

## DET {#det-fqdn}

~~~~
DET: 2001:0030:00a0:0145:a3ad:1952:0ad0:a69e
ID: a3ad:1952:0ad0:a69e
OGA: 5
HDA: 0014 = 20
RAA: 000a = 10
Prefix: 20010030
FQDN: a3ad19520ad0a69e.5.20.10.20010030.det.uas.icao.int
~~~~

When building a DET FQDN the following two things must be done:

1. The RAA and HDA values MUST be converted from hexadecimal to decimal form
2. The FQDN must be built using the expanded form of the IPv6 address

The prefix is included in the FQDN form to support other potential prefixes being used.

## Reverse DET

~~~~
$ORIGIN  5.4.1.0.0.a.0.0.0.3.0.0.1.0.0.2.ip6.arpa.
e.9.6.a.0.d.a.0.2.5.9.1.d.a.3.a    IN   PTR
~~~~

# Supported DNS Records

DRIP requires a number of resource records, some specific to certain registries to function.

## HIP RR

All registries will have their own DET associated with them and their respective DNS server will hold a HIP RR that is pointed to by their DET FQDN.

MRA and RIDR servers will also have HIP RRs for their registered parties (aircraft and operators).

## CERT RR

Most attestations can be placed into DNS. An exception to this is the AttestationCertificate made during Session ID registration.

## NS RR

Along with their associated "glue" record (A/AAAA) supports the traversal in DNS across the tree.

1. `<mfr.remoteid.aero>` on Root points to specific DET FQDN of IRM
2. `<icao_mfr_code>.mfr.remoteid.aero` on IRM points to specific DET FQDN of MRA
3. `<raa_value>.det.remoteid.aero` on Root pointing to DET FQDN of matching RAA
4. `<hda_value>.<raa_value>.det.remoteid.aero` on RAA Registry pointing to DET FQDN of matching HDA

## AAAA RR

DRIP requires the use of IPv6.

## SVR RR

TODO -- points to server for RDAP stuff

## TLSA RR

Raw key format here; for DTLS support. RFC6698

# Registry Operations

As a general rule the following processing performed for any registration operation:

1. Verify input Attestations from registering party
2. Check for collision of DET and HI
3. Populate DNS with required/optional records
4. Populate Database with PII and other info
5. Generate and return required/optional Attestations/Certificates

## Registering a Registry

DRIP defines two levels of hierarchy maintained by the Registration Assigning Authority (RAA) and HHIT Domain Authority (HDA). The authors anticipate that an RAA is owned and operated by a regional CAA (or a delegated party by an CAA in a specific airspace region) with HDAs being contracted out. As such a chain of trust for registries is required to ensure trustworthiness is not compromised. More information on the registries can be found in {{?hhit-registries}}.

Both the RAA and HDA generate their own keypairs and self-signed attestations (Self-Attestation: RAA on RAA and Self-Attestation: HDA on HDA respectively). The HDA sends to the RAA its self-signed attestation to be added into the RAA DNS.

The RAA confirms the attestation received is valid and that no DET collisions occur before adding a HIP RR to its DNS for the new HDA. An Attestation: RAA on HDA (A-rh) is sent as a confirmation that provisioning was successful.

The HDA is now a valid “Registry” and uses its keypair and Self-Attestation: HDA on HDA (SA-hh) with all provisioning requests from downstream.

### Registering an RAA

Specifically handled by the Root Registry ({{root}}).

| Inputs (Optional)         | DNS Entries (Optional)                                             | Outputs (Optional)                   |
| ------------------------- | ------------------------------------------------------------------ | ------------------------------------ |
| IP Address of RAA         | Root: `<raa_value>.det.remoteid.aero NS <raa_det_fqdn>`            | Attestation: Root, RAA               |
| RAA Self-Attestation      | Root: `<raa_det_fqdn> AAAA <raa_ip>`                               | (Concise Attestation: Root, RAA)     |
|                           | RAA: `<raa_det_fqdn> HIP <hip_rr_data>`                            | (Broadcast Attestation: Root, RAA)   |
|                           | RAA: `<raa_det_fqdn> CERT <raa_self_attestation>`                  |                                      |
|                           | (Root: `<raa_det_fqdn> CERT <attestation_root_raa>`)               |                                      |
|                           | (Root: `<raa_det_fqdn> CERT <concise_attestation_root_raa>`)       |                                      |
|                           | (Root: `<raa_det_fqdn> CERT <broadcast_attestation_root_raa>`)     |                                      |
|                           | (RAA: `<raa_det_fqdn> CERT <attestation_root_raa>`)                |                                      |
|                           | (RAA: `<raa_det_fqdn> CERT <concise_attestation_root_raa>`)        |                                      |
|                           | (RAA: `<raa_det_fqdn> CERT <broadcast_attestation_root_raa>`)      |                                      |

### Registering an IRM

Specifically handled by the Root Registry ({{root}}).

| Inputs (Optional)         | DNS Entries (Optional)                                             | Outputs (Optional)                   |
| ------------------------- | ------------------------------------------------------------------ | ------------------------------------ |
| IP Address of IRM         | Root: `mfr.remoteid.aero NS <irm_det_fqdn>`                        | Attestation: Root, IRM               |
| IRM Self-Attestation      | Root: `1.det.remoteid.aero NS <irm_det_fqdn>`                      | (Concise Attestation: Root, IRM)     |
|                           | Root: `<irm_det_fqdn> AAAA <irm_ip>`                               | (Broadcast Attestation: Root, IRM)   |
|                           | IRM: `<irm_det_fqdn> HIP <hip_rr_data>`                            |                                      |
|                           | IRM: `<irm_det_fqdn> CERT <irm_self_attestation>`                  |                                      |
|                           | (Root: `<irm_det_fqdn> CERT <attestation_root_irm>`)               |                                      |
|                           | (Root: `<irm_det_fqdn> CERT <concise_attestation_root_irm>`)       |                                      |
|                           | (Root: `<irm_det_fqdn> CERT <broadcast_attestation_root_irm>`)     |                                      |
|                           | (IRM: `<irm_det_fqdn> CERT <attestation_root_irm>`)                |                                      |
|                           | (IRM: `<irm_det_fqdn> CERT <concise_attestation_root_irm>`)        |                                      |
|                           | (IRM: `<irm_det_fqdn> CERT <broadcast_attestation_root_irm>`)      |                                      |

### Registering an HDA

Specifically handled by an RAA ({{raa}}).

| Inputs (Optional)         | DNS Entries (Optional)                                             | Outputs (Optional)                   |
| ------------------------- | ------------------------------------------------------------------ | ------------------------------------ |
| IP Address of HDA         | RAA: `<hda_value>.<raa_value>.det.remoteid.aero NS <hda_det_fqdn>` | Attestation: RAA, HDA                |
| HDA Self-Attestation      | RAA: `<hda_det_fqdn> AAAA <hda_ip>`                                | (Concise Attestation: RAA, HDA)      |
|                           | RAA: `<hda_det_fqdn> HIP <hip_rr_data>`                            | (Broadcast Attestation: RAA, HDA)    |
|                           | HDA: `<hda_det_fqdn> CERT <hda_self_attestation>`                  |                                      |
|                           | (RAA: `<hda_det_fqdn> CERT <attestation_raa_hda>`)                 |                                      |
|                           | (RAA: `<hda_det_fqdn> CERT <concise_attestation_raa_hda>`)         |                                      |
|                           | (RAA: `<hda_det_fqdn> CERT <broadcast_attestation_raa_hda>`)       |                                      |
|                           | (HDA: `<hda_det_fqdn> CERT <attestation_raa_hda>`)                 |                                      |
|                           | (HDA: `<hda_det_fqdn> CERT <concise_attestation_raa_hda>`)         |                                      |
|                           | (HDA: `<hda_det_fqdn> CERT <broadcast_attestation_raa_hda>`)       |                                      |

### Registering an MRA

Specifically handled by the IRM Registry ({{irm}}).

| Inputs (Optional)         | DNS Entries (Optional)                                             | Outputs (Optional)                   |
| ------------------------- | ------------------------------------------------------------------ | ------------------------------------ |
| IP Address of MRA         | IRM: `<icao_mfr_code>.mfr.remoteid.aero NS <mra_det_fqdn>`         | Attestation: IRM, MRA                |
| MRA Self-Attestation      | IRM: `<hda_value>.1.det.remoteid.aero NS <mra_det_fqdn>`           | (Concise Attestation: IRM, MRA)      |
| ICAO Manufacturer Code    | IRM: `<mra_det_fqdn> AAAA <mra_ip>`                                | (Broadcast Attestation: IRM, MRA)    |
|                           | MRA: `<mra_det_fqdn> HIP <hip_rr_data>`                            |                                      |
|                           | MRA: `<mra_det_fqdn> CERT <mra_self_attestation>`                  |                                      |
|                           | (IRM: `<mra_det_fqdn> CERT <attestation_irm_mra>`)                 |                                      |
|                           | (IRM: `<mra_det_fqdn> CERT <concise_attestation_irm_mra>`)         |                                      |
|                           | (IRM: `<mra_det_fqdn> CERT <broadcast_attestation_irm_mra>`)       |                                      |
|                           | (MRA: `<mra_det_fqdn> CERT <attestation_irm_mra>`)                 |                                      |
|                           | (MRA: `<mra_det_fqdn> CERT <concise_attestation_irm_mra>`)         |                                      |
|                           | (MRA: `<mra_det_fqdn> CERT <broadcast_attestation_irm_mra>`)       |                                      |

## Registering a Serial Number

Specifically handled by a MRA ({{mra}}).

| Inputs (Optional)         | DNS Entries (Optional)                                             | Outputs (Optional)                   |
| ------------------------- | ------------------------------------------------------------------ | ------------------------------------ |
| Serial Number             | `<sn_det_fqdn> HIP <hip_rr_data>`                                  | Attestation: MRA, UA                 |
| (UA Self-Attestation)     | (`<sn_det_fqdn> CERT <sn_self_attestation>`)                       | Broadcast Attestation: MRA, UA       |
| UA Metadata               | (`<sn_det_fqdn> CERT <attestation_mra_sn>`)                        | (Concise Attestation: MRA, UA)       |
|                           | (`<sn_det_fqdn> CERT <concise_attestation_mra_sn>`)                |                                      |
|                           | (`<sn_det_fqdn> CERT <broadcast_attestation_mra_sn>`)              |                                      |

~~~~
    +--------------+    SA-a0a0 +-----------------+
    | Manufacturer | <--------> | Manufacturer CA |
    +--------------+ A-ma0      +-----------------+
        ^    |
        |    |
        |    |
SA-a0a0 |    |   A-ma0
        |    |
        |    v
    +----------+
    | Aircraft |
    +----------+
~~~~
{:fig title="Manufacturer Provision"}

During the initial configuration and production at the factory the Aircraft MUST be configured to have a serial number. ASTM defines this to be an ANSI/CTA-2063A. Under DRIP a DET can be encoded as such to be able to convert back and forth between them. This is covered in {{drip-rid}}.

Under DRIP the Manufacturer SHOULD be using DETs and have their own keypair and SA-mm (Self-Attestation: Manufacturer on Manufacturer). (Ed. Note: some words on aircraft keypair and certs here?).

Self-Attestation: Aircraft 0 on Aircraft 0 (SA-a0a0) is extracted by the manufacturer and sent to their Certificate Authority (CA) to be verified and added. A resulting attestation (Attestation: Manufacturer on Aircraft 0 \[A-ma0\]) SHOULD be a DRIP Attestation – however this could be a X.509 certificate binding the serial number to the manufacturer.

## Registering an Operator

Specifically handled by a RIDR ({{ridr}}).

| Inputs (Optional)         | DNS Entries (Optional)                                             | Outputs (Optional)                    |
| ------------------------- | ------------------------------------------------------------------ | ------------------------------------- |
| Operator Self-Attestation | `<op_det_fqdn> HIP <hip_rr_data>`                                  | Attestation: RIDR, Operator           |
| Operator PII              | (`<op_det_fqdn> CERT <op_self_attestation>`)                       | Broadcast Attestation: RIDR, Operator |
|                           | (`<op_det_fqdn> CERT <attestation_ridr_op>`)                       | (Concise Attestation: RIDR, Operator) |
|                           | (`<op_det_fqdn> CERT <concise_attestation_ridr_op>`)               |                                       |
|                           | (`<op_det_fqdn> CERT <broadcast_attestation_ridr_op>`)             |                                       |

~~~~
+----------+            +---------+
| Registry | ---------> | HDA DNS |
+----------+  [HIP RR]  +---------+
    ^   |
    |   |
    |   |
Coo |   | Aro
    |   |
    |   v
+----------+
| Operator |
+----------+
~~~~
{:fig title="Operator Provision"}

The Operator generates a keypair and DET as specified in DRIP UAS RID. A self-signed attestation (Self-Attestation: Operator on Operator \[SA-oo\]) is generated and sent to the desired Registry (HDA). Other relevant information and possibly personally identifiable information needed may also be required to be sent to the Registry (all over a secure channel – the method of which is out of scope for this document).

The Registry cross checks any personally identifiable information as required. Certificate: Operator on Operator is verified (both using the expiration timestamp and signature). The DET is searched in the Registries database to confirm that no collision occurs. A new attestation is generated (Attestation: Registry on Operator) and sent securely back to the Operator. Optionally the DET/HI pairing can be added to the Registries DNS in to form of a HIP Resource Record (RR). Other RRs, such as CERT and TXT, may also be used to hold public information.

With the receipt of Attestation: Registry on Operator (A-ro) the provisioning of an Operator is complete.

## Registering a Session ID

Specifically handled by a RIDR ({{ridr}}).

| Inputs (Optional)                   | DNS Entries (Optional)                                             | Outputs (Optional)                          |
| ----------------------------------- | ------------------------------------------------------------------ | ------------------------------------------- |
| Attestation: RIDR, Operator         | `<session_det_fqdn> HIP <hip_rr_data>`                             | Attestation: RIDR, Operator                 |
| Attestation: Operator, UA           | `<session_det_fqdn> CERT <session_self_attestation>`               | Broadcast Attestation: RIDR, Operator       |
| Serial Number                       | `<session_det_fqdn> CERT <broadcast_attestation_ridr_session>`     | Attestation Certificate: RIDR, Operator, UA |
| (Concise Attestation: Operator, UA) | (`<session_det_fqdn> CERT <attestation_ridr_session>`)             | (Concise Attestation: RIDR, Operator)       |
| (Mutual Attestation: Operator, UA)  | (`<session_det_fqdn> CERT <concise_attestation_ridr_session>`)     | (Mutual Certificate: RIDR, Operator, UA)    |
| (Link Attestation: Operator, UA)    |                                                                    | (Concise Certificate: RIDR, Operator, UA)   |
| (Operational Intent)                |                                                                    | (Link Certificate: RIDR, Operator, UA)      |
|                                     |                                                                    | (Broadcast Attestation: RAA, RIDR)          |
|                                     |                                                                    | (Broadcast Attestation: Root, RAA)          |

### Standard Provisioning

Under standard provisioning the Aircraft has its own connectivity to the Registry, the method which is out of scope for this document.

~~~~
+----------+
| Registry |
+----------+
    ^
    |
    |
    |  A-ro, A-oaN
    |
    |
+----------+                        +----------+
| Operator | <--------------------- | Aircraft |
+----------+        A-a0aN          +----------+
~~~~
{:fig title="Standard Provision: Step 1"}

Through mechanisms not specified in this document the Operator should have methods to instruct the Aircraft onboard systems to generate a keypair and certificate. This certificate is chained to the factory provisioned certificate (Self-Attestation: Aircraft 0 on Aircraft 0 \[SA-a0a0\]). This new attestation (Attestation: Aircraft 0 on Aircraft N \[A-a0aN\]) is securely extracted by the Operator.

With A-a0aN the sub-attestation (Self-Attestation: Aircraft N on Aircraft N \[SA-aNaN\]) is used by the Operator to generate Attestation: Operator on Aircraft N (A-oaN). This along with Attestation: Registry on Operator (A-ro) is sent to the Registry.

~~~~
+----------+
| Registry |
+----------+
    |
    |
    |
    |  Token
    |
    v
+----------+                        +----------+
| Operator | ---------------------> | Aircraft |
+----------+        Token           +----------+
~~~~
{:fig title="Standard Provision: Step 2"}

On the Registry, A-ro is verified and used as confirmation that the Operator is already registered. A-oaN also undergoes a validation check and used to generate a token to return to the Operator to continue provisioning.

Upon receipt of this token, the Operator injects it into the Aircraft and its used to form a secure connection to the Registry. The Aircraft then sends Attestation: Manufacturer on Aircraft 0 (A-ma0) and Attestation: Aircraft 0 to Aircraft N (A-a0aN).  

~~~~
+---------+
| HDA DNS |
+---------+
    ^
    |
    | HIP RR
    |
    |
    |
+----------+ <----------------------------+
| Registry |                              |
+----------+ ------------------------+    |
    |                                |    |
    |                                |    |  Token,
    |  AC-roaN               BA-raN  |    |  A-ma0, A-a0aN
    |                                |    |
    |                                |    |
    v                                v    |
+----------+                      +----------+
| Operator |                      | Aircraft |
+----------+                      +----------+
~~~~
{:fig title="Standard Provision: Step 3"}

The Registry uses Attestation: Manufacturer on Aircraft 0 (with an external database if supported) to confirm the validity of the Aircraft. Attestation: Aircraft 0 on Aircraft N is correlated with Attestation: Operator on Aircraft N and Attestation: Manufacturer on Aircraft 0 to see the chain of ownership. The new DET tied to Aircraft N is then checked for collisions in the HDA. With the information the Registry generates two items: AttestationCertificate: Registry on Operator on Aircraft N (AC-roaN) and BroadcastAttestation: Registry on Aircraft N (BA-raN). A HIP RR (and other RR types as needed) are generated and inserted into the HDA.

AC-roaN is sent via a secure channel back to the Operator to be stored. BA-raN is sent to the Aircraft to be used in Broadcast RID as specified in {{drip-auth}}.

### Operator Assisted Provisioning

This provisioning scheme is for when the Aircraft is unable to connect to the Registry itself or does not have the hardware required to generate keypairs and certificates.

~~~~
+----------+
| Registry |
+----------+






+----------+                        +----------+
| Operator | ---------------------> | Aircraft |
+----------+     aN, SA-aNaN        +----------+
~~~~
{:fig title="Operator Assisted Provision: Step 1"}

To start the Operator generates on behalf of the Aircraft a new keypair and Attestation: Aircraft N on Aircraft N (SA-aNaN). This keypair and certificate are injected into the Aircraft for it to generate Attestation: Aircraft 0 on Aircraft N (A-a0aN). After injecting the keypair and certificate, the Operator MUST destroy all copies of the keypair.

~~~~
+----------+
| Registry |
+----------+
    ^
    |
    |
    |  A-ro, A-ma0, A-a0aN, A-oaN
    |
    |
+----------+                        +----------+
| Operator | <--------------------- | Aircraft |
+----------+      A-ma0, A-a0aN     +----------+
~~~~
{:fig title="Operator Assisted Provision: Step 2"}

Attestation: Manufacturer on Aircraft 0 (A-ma0) and Attestation: Aircraft 0 on Aircraft N (A-a0aN) is extracted by the Operator and the following data items are sent to the Registry; Attestation: Registry on Operator (A-ro), Attestation: Manufacturer on Aircraft 0 (A-ma0), Attestation: Aircraft 0 on Aircraft N (A-a0aN), Attestation: Operator on Aircraft N (A-oaN).

~~~~
+----------+            +---------+
| Registry | ---------> | HDA DNS |
+----------+   HIP RR   +---------+
    |
    |
    |
    |  AC-roaN, BA-raN
    |
    v
+----------+                        +----------+
| Operator | ---------------------> | Aircraft |
+----------+        BA-raN          +----------+
~~~~
{:fig title="Operator Assisted Provision: Step 3"}

On the Registry validation checks are done on all attestations as per the previous sections. Once complete then the Registry checks for a DET collision, adding to the HDA if clear and generates AttestationCertificate: Registry on Operator on Aircraft N (AC-roaN) and BroadcastAttestation: Registry on Aircraft N (BA-raN). Both are sent back to the Operator.

The Operator securely inject BA-raN and securely stores AC-roaN of Aircraft N.

### Initial Provisioning

A special form of provisioning is used when the Aircraft is first sold to an Operator. Instead of generating a new keypair, the built in keypair and certificate done by the Manufacturer is used to provision and register the aircraft to the owner.

For this either Standard or Operator Assisted methods can be used.

# EPP Definitions

TODO

# RDAP Definitions

TODO

# IANA Considerations

(Editor Note: EPP/RDAP adds to existing registries, CERT RR update, HIP RR update)

# Security Considerations

## DET Generation

Under the FAA {{NPRM}}, it is expecting that IDs for UAS are assigned by the UTM and are generally one-time use. The methods for this however are unspecified leaving two options.

1
: The entity generates its own DET, discovering and using thr RAA and HDA for the target Registry. The method for discovering a Registry's RAA and HDA is out of scope here. This allows for the device to generate an DET to send to the Registry to be accepted (thus generating the required Host Identity Claim) or denied.

2
: The entity sends to the Registry its HI for it to be hashed and result in the DET. The Registry would then either accept (returning the DET to the device) or deny this pairing.

Keypairs are expected to be generated on the device hardware it will be used on. Due to hardware limitations (see {{security-considerations}}) and connectivity it is acceptable under DRIP to generate keypairs for the Aircraft on Operator devices and later securely inject them into the Aircraft (as defined in {{operator-assisted-provisioning}}). The methods to securely inject and store keypair information in a “secure element” of the Aircraft is out of scope of this document.

In either case the Registry must decide on if the HI/DET pairing is valid. This in its simplest form is checking the current Registry for a collision on the DET.

Upon accepting a HI/DET pair the Registry MUST populate the required the DNS serving the HDA with the HIP RR and other relevant RR types (such as TXT and CERT). The Registry MUST also generate the appropriate Attestation for the given operation.

If the Registry denied the HI/DET pair, because there was a DET collision or any other reason, the Registry MUST signal back to the device being provisioned that a new HI needs to be generated.

# Contributors

- Scott Hollenbeck for his guidance with EPP/RDAP
- Andrei Gurtov for his insights as a pilot